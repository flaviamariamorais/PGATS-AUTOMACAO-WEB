Criar nosso diretório (mkdir ou manual)
Abrir no editor de textos (code . ou manual)
Inicializar um projeto npm (npm init --yes)
Instalar o Cypress v13 (ou última, se quiser)
npm install -D cypress
Abrir e iniciar a config do projeto
npx cypress open
Avançar até executar o primeiro teste


https://www.automationexercise.com/

https://automationexercise.com/test_cases

https://docs.cypress.io/app/plugins/plugins-list

Acho legal essa página aqui que comenta sobre a prioridade dos seletores que o cypress utiliza: 
https://docs.cypress.io/api/cypress-api/element-selector-api

samuelborgeslucas@gmail.com

https://docs.cypress.io/app/references/command-line#cypress-run


---

https://github.com/faker-js/faker 

https://chancejs.com/usage/node.html

https://github.com/samlucax
-----
https://the-internet.herokuapp.com


https://developer.chrome.com/blog/webdriver-bidi?hl=pt-br

https://docs.cypress.io/api/commands/invoke

https://developer.mozilla.org/pt-BR/docs/Web/API/DataTransfer

https://github.com/4teamwork/cypress-drag-drop

https://developers.google.com/recaptcha/docs/faq?hl=pt-br#id-like-to-run-automated-tests-with-recaptcha.-what-should-i-do

----
- https://github.com
- criar um novo repositório
- seguir os comandos de sugestão do próprio github
.gitignore
coloca dentro do gitignore

node_modules
package-lock.json

cypress/screenshots
cypress/videos
cypress/reports
-----

git status 
git add nome_do_arqui

git commit -m "mensagem do commit"

git push
git pull

------

https://jarbon.medium.com/
https://testers.ai/

https://github.com/microsoft/playwright-mcp
https://github.com/angiejones/mcp-selenium
https://www.cypress.io/blog/cy-prompt-vs-mcp-agents-ai-designed-for-testing-not-just-tasks


-----

https://home.testcraft.app/

https://www.w3.org/TR/UNDERSTANDING-WCAG20/conformance.html
https://www.w3.org/WAI/WCAG22/quickref/?versions=2.1#link-purpose-in-context

https://docs.cypress.io/app/guides/cypress-studio

https://docs.cypress.io/app/core-concepts/best-practices

https://github.com/goldbergyoni/javascript-testing-best-practices/?tab=readme-ov-file#section-3%EF%B8%8F%E2%83%A3-frontend-testing 

https://github.com/goldbergyoni/javascript-testing-best-practices/blob/master/readme-pt-br.md (traduzida


https://automationexercise.com/test_cases 
